From ed0161dfe9acbb4f6fa2f41c4e553e77784f19de Mon Sep 17 00:00:00 2001
From: Matteo Geromin <geromin.matteo@gmail.com>
Date: Mon, 2 Nov 2015 23:22:40 +0100
Subject: [PATCH 03/19] Add Beaglebone LCD support

---
 board/ti/am335x/board.c      | 165 +++++++++++++++++++++++++++++++++++++++++++
 board/ti/am335x/mux.c        |  33 +++++++++
 drivers/video/cfb_console.c  |  22 +++++-
 drivers/video/da8xx-fb.c     |   9 ++-
 include/configs/am335x_evm.h |  29 ++++++++
 5 files changed, 254 insertions(+), 4 deletions(-)

diff --git a/board/ti/am335x/board.c b/board/ti/am335x/board.c
index 004f47c..f8adb90 100644
--- a/board/ti/am335x/board.c
+++ b/board/ti/am335x/board.c
@@ -33,9 +33,105 @@
 #include <watchdog.h>
 #include <environment.h>
 #include "board.h"
+#if defined(CONFIG_VIDEO)
+#include "../../../drivers/video/da8xx-fb.h"
+#endif
 
 DECLARE_GLOBAL_DATA_PTR;
 
+#if defined(CONFIG_VIDEO)
+static const struct da8xx_panel lcd_panel = {
+	/* Casio COM57H531x */
+	.name = "Casio_COM57H531x",
+	.width = 480,
+	.height = 272,
+	.hfp = 9,
+	.hbp = 44,
+	.hsw = 5,
+	.vfp = 4,
+	.vbp = 13,
+	.vsw = 10,
+	.pxl_clk = 9000000,
+	.invert_pxl_clk = 0,
+};
+
+static const struct display_panel disp_panel = {
+	WVGA,
+	32,
+	24,
+	COLOR_ACTIVE,
+};
+
+static const struct lcd_ctrl_config lcd_cfg = {
+	&disp_panel,
+	.ac_bias		= 255,
+	.ac_bias_intrpt		= 0,
+	.dma_burst_sz		= 16,
+	.bpp			= 32,
+	.fdd			= 0x80,
+	.tft_alt_mode		= 0,
+	.stn_565_mode		= 0,
+	.mono_8bit_mode		= 0,
+	.invert_line_clock	= 1,
+	.invert_frm_clock	= 1,
+	.sync_edge		= 0,
+	.sync_ctrl		= 1,
+	.raster_order		= 0,
+};
+
+static struct dpll_regs dpll_lcd_regs = {
+	.cm_clkmode_dpll = CM_WKUP + 0x98,
+	.cm_idlest_dpll = CM_WKUP + 0x48,
+	.cm_clksel_dpll = CM_WKUP + 0x54,
+};
+
+#define PLL_GET_M(v) ((v >> 8) & 0x7ff)
+#define PLL_GET_N(v) (v & 0x7f)
+
+static int get_clk(struct dpll_regs *dpll_regs)
+{
+	unsigned int val;
+	unsigned int m, n;
+	int f = 0;
+
+	val = readl(dpll_regs->cm_clksel_dpll);
+	m = PLL_GET_M(val);
+	n = PLL_GET_N(val);
+	f = (m * V_OSCK) / (n+1);
+
+	return f;
+};
+
+int clk_get(int clk)
+{
+	return get_clk(&dpll_lcd_regs);
+};
+
+static int conf_disp_pll(int m, int n)
+{
+	struct cm_perpll *cmper = (struct cm_perpll *)CM_PER;
+	struct cm_dpll *cmdpll = (struct cm_dpll *)CM_DPLL;
+	struct dpll_params dpll_lcd = {m, n, -1, -1, -1, -1, -1};
+
+	u32 *const clk_domains[] = {
+		&cmper->lcdclkctrl,
+		0
+	};
+	u32 *const clk_modules_explicit_en[] = {
+		&cmper->lcdclkctrl,
+		&cmper->lcdcclkstctrl,
+		&cmper->epwmss0clkctrl,
+		0
+	};
+	do_enable_clocks(clk_domains, clk_modules_explicit_en, 1);
+	writel(0x0, &cmdpll->clklcdcpixelclk);
+
+	do_setup_dpll(&dpll_lcd_regs, &dpll_lcd);
+
+	return 0;
+}
+#endif
+
 /* GPIO that controls power to DDR on EVM-SK */
 #define GPIO_DDR_VTT_EN		7
 
@@ -83,6 +179,54 @@ static int read_eeprom(struct am335x_baseboard_id *header)
 	return 0;
 }
 
+static int set_gpio(int gpio, int state)
+{
+	gpio_request(gpio, "temp");
+	gpio_direction_output(gpio, state);
+	gpio_set_value(gpio, state);
+	gpio_free(gpio);
+	return 0;
+}
+
+#if defined(CONFIG_VIDEO)
+static int enable_backlight(void)
+{
+	set_gpio(50, 1); // GPIO1_18
+	return 0;
+}
+
+static int enable_lcd(void)
+{
+	set_gpio(115, 1); // GPIO3_19
+	return 0;
+}
+
+static int enable_pwm(void)
+{
+	struct pwmss_regs *pwmss = (struct pwmss_regs *)PWMSS0_BASE;
+	struct pwmss_ecap_regs *ecap;
+	int ticks = PWM_TICKS;
+	int duty = PWM_DUTY;
+
+	ecap = (struct pwmss_ecap_regs *)AM33XX_ECAP0_BASE;
+	/* enable clock */
+	setbits_le32(&pwmss->clkconfig, ECAP_CLK_EN);
+	/* TimeStam Counter register */
+	writel(0xdb9, &ecap->tsctr);
+	/* config period */
+	writel(ticks - 1, &ecap->cap3);
+	writel(ticks - 1, &ecap->cap1);
+	setbits_le16(&ecap->ecctl2,
+		     (ECTRL2_MDSL_ECAP | ECTRL2_SYNCOSEL_MASK | 0xd0));
+	/* config duty */
+	writel(duty, &ecap->cap2);
+	writel(duty, &ecap->cap4);
+	/* start */
+	setbits_le16(&ecap->ecctl2, ECTRL2_CTRSTP_FREERUN);
+	return 0;
+}
+#endif
+
 #ifndef CONFIG_SKIP_LOWLEVEL_INIT
 static const struct ddr_data ddr2_data = {
 	.datardsratio0 = MT47H128M16RT25E_RD_DQS,
@@ -541,6 +685,8 @@ void sdram_init(void)
 }
 #endif
 
+unsigned long fb_mem_baseaddr;
+
 /*
  * Basic board specific setup.  Pinmux has been handled already.
  */
@@ -577,6 +723,25 @@ int board_late_init(void)
 	setenv("board_rev", safe_string);
 #endif
 
+#if defined(CONFIG_VIDEO)
+	if(board_is_bone(&header))
+		VIDEO_DA8XX_FB_MEMADDR = (((256*1024*1024)-VIDEO_DA8XX_FB_MEMSIZE)+0x80000000);
+	else
+		VIDEO_DA8XX_FB_MEMADDR = (((512*1024*1024)-VIDEO_DA8XX_FB_MEMSIZE)+0x80000000);
+	conf_disp_pll(24, 1);
+	da8xx_video_init(&lcd_panel, &lcd_cfg, 32);
+	enable_lcd();
+#endif
+
+	// Enable Power-ON led
+	set_gpio(48, 1); // gpio1_16
+
+#if defined(CONFIG_VIDEO)
+	setenv("stdout", "serial");
+	enable_pwm();
+	//enable_backlight();
+#endif
+
 	return 0;
 }
 #endif
diff --git a/board/ti/am335x/mux.c b/board/ti/am335x/mux.c
index 680f656..56efe02 100644
--- a/board/ti/am335x/mux.c
+++ b/board/ti/am335x/mux.c
@@ -236,6 +236,35 @@ static struct module_pin_mux bone_norcape_pin_mux[] = {
 };
 #endif
 
+#if defined(CONFIG_VIDEO)
+/* LCD */
+static struct module_pin_mux LCD_pin_mux[] = {
+	{OFFSET(lcd_data0), MODE(0) },     /* lcd_data0 */
+	{OFFSET(lcd_data1), MODE(0) },     /* lcd_data1 */
+	{OFFSET(lcd_data2), MODE(0) },     /* lcd_data2 */
+	{OFFSET(lcd_data3), MODE(0) },     /* lcd_data3 */
+	{OFFSET(lcd_data4), MODE(0) },     /* lcd_data4 */
+	{OFFSET(lcd_data5), MODE(0) },     /* lcd_data5 */
+	{OFFSET(lcd_data6), MODE(0) },     /* lcd_data6 */
+	{OFFSET(lcd_data7), MODE(0) },     /* lcd_data7 */
+	{OFFSET(lcd_data8), MODE(0) },     /* lcd_data8 */
+	{OFFSET(lcd_data9), MODE(0) },     /* lcd_data9 */
+	{OFFSET(lcd_data10), MODE(0) },    /* lcd_data10 */
+	{OFFSET(lcd_data11), MODE(0) },    /* lcd_data11 */
+	{OFFSET(lcd_data12), MODE(0) },    /* lcd_data12 */
+	{OFFSET(lcd_data13), MODE(0) },    /* lcd_data13 */
+	{OFFSET(lcd_data14), MODE(0) },    /* lcd_data14 */
+	{OFFSET(lcd_data15), MODE(0) },    /* lcd_data15 */
+	{OFFSET(lcd_vsync), MODE(0) },     /* lcd_vsync */
+	{OFFSET(lcd_hsync), MODE(0) },     /* lcd_hsync */
+	{OFFSET(lcd_pclk), MODE(0) },       /* lcd_pclk */
+	{OFFSET(lcd_ac_bias_en), MODE(0) }, /* lcd_en */
+	{OFFSET(mcasp0_fsr), (MODE(7) | PULLUP_EN | RXACTIVE)}, /*LCD DISEN*/
+	{OFFSET(gpmc_a2), MODE(7) | PULLDOWN_EN | RXACTIVE},
+	{-1},
+};
+#endif
+
 #if defined(CONFIG_NOR_BOOT)
 void enable_norboot_pin_mux(void)
 {
@@ -370,4 +399,8 @@ void enable_board_pin_mux(struct am335x_baseboard_id *header)
 		puts("Unknown board, cannot configure pinmux.");
 		hang();
 	}
+
+#if defined(CONFIG_VIDEO)
+	configure_module_pin_mux(LCD_pin_mux);
+#endif
 }
diff --git a/drivers/video/cfb_console.c b/drivers/video/cfb_console.c
index 7f2ddc1..e409ba7 100644
--- a/drivers/video/cfb_console.c
+++ b/drivers/video/cfb_console.c
@@ -87,6 +87,7 @@
  */
 
 #include <common.h>
+#include <command.h>
 #include <fdtdec.h>
 #include <version.h>
 #include <malloc.h>
@@ -1206,9 +1207,9 @@ __weak void video_set_lut(unsigned int index, unsigned char r,
 
 #define FILL_32BIT_X888RGB(r,g,b) {			\
 	*(unsigned long *)fb =				\
-		SWAP32((unsigned long)(((r<<16) |	\
+		SWAP32((unsigned long)(((r) |	\
 					(g<<8)  |	\
-					 b)));		\
+					(b<<16))));		\
 	fb += 4;					\
 }
 
@@ -1991,6 +1992,11 @@ static void *video_logo(void)
 	__maybe_unused int y_off = 0;
 	__maybe_unused ulong addr;
 	__maybe_unused char *s;
+	__maybe_unused char *c;
+	int argc;
+	char * argv[5];
+	ulong cycles = 0;
+	int repeatable;
 
 	splash_get_pos(&video_logo_xpos, &video_logo_ypos);
 
@@ -2000,6 +2006,18 @@ static void *video_logo(void)
 		splash_screen_prepare();
 		addr = simple_strtoul(s, NULL, 16);
 
+		c = getenv("load_splash");
+		if (c != NULL) {
+			argc = 2;
+			argv[0] = "run";
+			argv[1] = "load_splash";
+			cmd_process(0, argc, argv, &repeatable, &cycles);
+		}
+		else {
+			printf("Set 'load_splash' command to load BMP file");
+			return NULL;
+		}
+
 		if (video_display_bitmap(addr,
 					video_logo_xpos,
 					video_logo_ypos) == 0) {
diff --git a/drivers/video/da8xx-fb.c b/drivers/video/da8xx-fb.c
index 3a5f325..8957c23 100644
--- a/drivers/video/da8xx-fb.c
+++ b/drivers/video/da8xx-fb.c
@@ -949,10 +949,15 @@ void *video_hw_init(void)
 			da8xx_lcd_cfg->bpp;
 	par->vram_size = par->vram_size * LCD_NUM_BUFFERS / 8;
 
+#if defined(VIDEO_DA8XX_FB_MEMSIZE) && defined(VIDEO_DA8XX_FB_MEMADDR)
+	par->vram_virt = map_physmem(VIDEO_DA8XX_FB_MEMADDR,VIDEO_DA8XX_FB_MEMSIZE,0);
+	par->vram_phys = VIDEO_DA8XX_FB_MEMADDR;
+#else
 	par->vram_virt = malloc(par->vram_size);
-
 	par->vram_phys = (dma_addr_t) par->vram_virt;
-	debug("Requesting 0x%x bytes for framebuffer at 0x%x\n",
+#endif
+
+	printf("Requesting 0x%x bytes for framebuffer at 0x%x\n",
 		(unsigned int)par->vram_size,
 		(unsigned int)par->vram_virt);
 	if (!par->vram_virt) {
diff --git a/include/configs/am335x_evm.h b/include/configs/am335x_evm.h
index b497465..7f4fecc 100644
--- a/include/configs/am335x_evm.h
+++ b/include/configs/am335x_evm.h
@@ -65,12 +65,41 @@
 #define NANDARGS ""
 #endif
 
+#ifndef __ASSEMBLY__
+extern unsigned long fb_mem_baseaddr;
+#endif
+
+/* SPLASH IMAGE */
+#if defined(CONFIG_VIDEO_DA8XX)
+#define CONFIG_VIDEO
+#define CONFIG_VGA_AS_SINGLE_DEVICE
+#define CONFIG_CMD_BMP
+#define VIDEO_DA8XX_FB_MEMSIZE	(4*1024*1024)	/* 4 MB */
+#define VIDEO_DA8XX_FB_MEMADDR	fb_mem_baseaddr
+#define CONFIG_SPLASH_SCREEN
+#define CONFIG_SPLASH_SCREEN_ALIGN
+#define CONFIG_VIDEO_LOGO
+#define CONFIG_SYS_CONSOLE_INFO_QUIET
+#define CONFIG_VIDEO_BMP_RLE8
+#define CONFIG_VIDEO_BMP_LOGO
+#define PWM_TICKS	0x1388
+#define PWM_DUTY	0x1000
+#define DA8XX_LCD_CNTL_BASE LCD_CNTL_BASE
+#define SPLASH_ARGS \
+	"load_splash=mmc rescan; load mmc ${bootpart} ${splashimage} ${splashfile}\0" \
+	"splashimage=0x8F000000\0" \
+	"splashfile=splash.bmp\0"
+#else
+#define SPLASH_ARGS ""
+#endif
+
 #define CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
 
 #ifndef CONFIG_SPL_BUILD
 #define CONFIG_EXTRA_ENV_SETTINGS \
 	DEFAULT_LINUX_BOOT_ENV \
 	DEFAULT_MMC_TI_ARGS \
+	SPLASH_ARGS \
 	"boot_fdt=try\0" \
 	"bootpart=0:2\0" \
 	"bootdir=/boot\0" \
-- 
1.9.1

